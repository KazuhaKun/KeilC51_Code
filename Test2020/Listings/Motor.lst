C51 COMPILER V9.54   MOTOR                                                                 10/16/2025 21:25:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Objects\Motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Motor.c ROM(COMPACT) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\Motor.lst) TABS(2) OBJECT(.\Objects\Motor.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer1.h"
   3          #include "main.h"
   4          #include "Delay.h"
   5          
   6          // // 引脚定义 - 直流电机（原有的PWM控制）
   7          // sbit Motor=P1^0;
   8          
   9          // 步进电机引脚定义 - 28BYJ-48 (使用P1口的低4位)
  10          // 连接到ULN2003D的IN1-IN4
  11          sbit Stepper_A = P1^0;  // 对应电机A相，连接ULN2003D的IN1
  12          sbit Stepper_B = P1^1;  // 对应电机B相，连接ULN2003D的IN2
  13          sbit Stepper_C = P1^2;  // 对应电机C相，连接ULN2003D的IN3
  14          sbit Stepper_D = P1^3;  // 对应电机D相，连接ULN2003D的IN4
  15          
  16          unsigned char Counter,Compare;
  17          
  18          // /**
  19          //   * @brief  电机初始化
  20          //   * @param  无
  21          //   * @retval 无
  22          //   */
  23          void Motor_Init(void)
  24          {
  25   1        Timer1_Init();
  26   1      }
  27          
  28          // /**
  29          //   * @brief  电机设置速度
  30          //   * @param  Speed 要设置的速度，范围0~100
  31          //   * @retval 无
  32          //   */
  33          // void Motor_SetSpeed(unsigned char Speed)
  34          // {
  35          //  Compare=Speed;
  36          // }
  37          
  38          //定时器1中断函数
  39          void Timer1_Routine() interrupt 3
  40          {
  41   1        static unsigned char SysTick_1s = 0; // 内部1秒计数（替代原来的SysTick）
  42   1        static unsigned char SysTick_100ms = 0; // 内部100毫秒计数
  43   1        static unsigned char SysTick_500ms = 0; // 内部500毫秒计数
  44   1        TL1 = 0xA4;   //设置定时初值
  45   1        TH1 = 0xFF;   //设置定时初值
  46   1        Counter++;
  47   1        Counter%=100; //计数值变化范围限制在0~99
  48   1      
  49   1        // 检查 10ms 周期是否完成 (Counter==0 happens every 10ms)
  50   1        if(Counter == 0) {
  51   2          // 0. 100ms 任务计数 (基于 10ms)
  52   2          if (++SysTick_100ms >= 10) {
  53   3            SysTick_100ms = 0;
  54   3            Flag_100ms_Task = 1; // 100毫秒任务标志置位
C51 COMPILER V9.54   MOTOR                                                                 10/16/2025 21:25:09 PAGE 2   

  55   3          }
  56   2          // 0.5. 500ms 任务计数 (基于 10ms)
  57   2          if (++SysTick_500ms >= 50) {
  58   3            SysTick_500ms = 0;
  59   3            Flag_500ms_Task = 1; // 500毫秒任务标志置位
  60   3          }
  61   2          // 1. 系统 1s 计数 (100 * 10ms = 1000ms)
  62   2          if (++SysTick_1s >= 100) {
  63   3            SysTick_1s = 0;
  64   3            Flag_1s_Task = 1; // 1秒任务标志置位
  65   3                  
  66   3            // 2. 5s 任务计数 (基于 1s)
  67   3            if (++Time_5s_Count >= 5) {
  68   4              Time_5s_Count = 0;
  69   4              Flag_5s_Task = 1; // 5秒任务标志置位
  70   4            }            
  71   3          }
  72   2              
  73   2              // 4. DS18B20 750ms 非阻塞等待 (75 * 10ms = 750ms)
  74   2              // 假设你在主循环启动转换后，会进入 Temp_State = 1，并开始计时
  75   2              if (Temp_State == 1) {
  76   3                  static unsigned char Delay_750ms = 0;
  77   3                  if (++Delay_750ms >= 75) {
  78   4                      Delay_750ms = 0;
  79   4                      Flag_750ms_Ready = 1; // 750ms 转换完成标志
  80   4                  }
  81   3              }
  82   2        }
  83   1      
  84   1        // if(Counter<Compare)  //计数值小于比较值
  85   1        // {
  86   1        //  Motor=1;    //输出1
  87   1        // }
  88   1        // else       //计数值大于比较值
  89   1        // {
  90   1        //  Motor=0;    //输出0
  91   1        // }
  92   1      }
  93          
  94          /*========== 步进电机控制函数 ==========*/
  95          
  96          // 八拍驱动时序数组（半步模式，高精度）
  97          // 对应 P1.3 P1.2 P1.1 P1.0 -> D C B A
  98          // code unsigned char phases[8] = {
  99          //     0x01, // 0001B (A)
 100          //     0x03, // 0011B (A, B)
 101          //     0x02, // 0010B (B)
 102          //     0x06, // 0110B (B, C)
 103          //     0x04, // 0100B (C)
 104          //     0x0C, // 1100B (C, D)
 105          //     0x08, // 1000B (D)
 106          //     0x09  // 1001B (D, A)
 107          // };
 108          
 109          unsigned char  xdata phases[8] = {   // 八拍驱动相位表（每相依次通电）
 110              0x01, 0x03, 0x02, 0x06,   // A -> AB -> B -> BC
 111              0x04, 0x0C, 0x08, 0x09    // C -> CD -> D -> DA
 112          };
 113          
 114          /**
 115            * @brief  步进电机开门动作（正转10圈后反转10圈）
 116            * @param  无
C51 COMPILER V9.54   MOTOR                                                                 10/16/2025 21:25:09 PAGE 3   

 117            * @retval 无
 118            * @note   28BYJ-48使用八拍模式，一圈约2048步
 119            *         10圈 = 2048 * 10 = 20480步
 120            */
 121          void Stepper_Motor_OpenDoor(void)
 122          {
 123   1          unsigned int s;
 124   1          unsigned char step;
 125   1          
 126   1          // 正转 10 圈 (之前是反转逻辑，现在用于正转)
 127   1          for(s = 0; s < 10 * 2048; s++)
 128   1          {
 129   2              step = s % 8;
 130   2              P1 = (P1 & 0xF0) | phases[7 - step]; // 使用反转时序
 131   2              Delay(1);
 132   2          }
 133   1      
 134   1          // 反转 10 圈 (之前是正转逻辑，现在用于反转)
 135   1          for(s = 0; s < 10 * 2048; s++)
 136   1          {
 137   2              step = s % 8;
 138   2              P1 = (P1 & 0xF0) | phases[step]; // 使用正转时序
 139   2              Delay(1);
 140   2          }
 141   1      
 142   1          // 停止：关闭所有线圈
 143   1          P1 &= 0xF0;
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
