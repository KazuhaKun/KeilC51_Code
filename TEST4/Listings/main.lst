C51 COMPILER V9.54   MAIN                                                                  02/25/2025 21:09:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          //#include "LCD1602.h"
   3          //#include "DS18B20.h"
   4          #include "delay.h"
   5          #include "Key.h"
   6          #include "Timer0.h"
   7          //#include "AT24C02.h"
   8          // #include "Buzzer.h"
   9          #include "nixie.h"
  10          #include "XPT2046.h"
  11          
  12          
  13          
  14          sbit Light_Green_A = P2^0;
  15          sbit Light_Yellow_A = P2^1;
  16          sbit Light_Red_A = P2^5;
  17          sbit Light_Green_B = P2^6;
  18          sbit Light_Yellow_B = P1^4;
  19          sbit Light_Red_B = P2^7;
  20          
  21          // sbit Light_Green_A = P1^0;
  22          // sbit Light_Yellow_A = P1^1;
  23          // sbit Light_Red_A = P1^2;
  24          // sbit Light_Green_B = P1^3;
  25          // sbit Light_Yellow_B = P1^4;
  26          // sbit Light_Red_B = P1^5;
  27          
  28          // sbit Buzzer = P2^5;
  29          
  30          unsigned char status;
  31          unsigned char FlashFlag_Light_Yellow = 0;
  32          unsigned char FlashFlag_Buzzer = 0;
  33          unsigned char KeyNum;
  34          unsigned char CountDown;
  35          unsigned int ADValue;
  36          
  37          
  38          // Nixie Show CountDown
  39          void Nixie_CountDown(unsigned char num)
  40          {
  41   1        unsigned char i,j;
  42   1        i = num/10;
  43   1        j = num%10;
  44   1        // Nixie(1,i);
  45   1        // Nixie(2,j);
  46   1        Nixie_SetBuf(7,i);
  47   1        Nixie_SetBuf(8,j);
  48   1      }
  49          
  50          void main()
  51          {
  52   1        Timer0_Init();
  53   1        while(1)
  54   1        {
C51 COMPILER V9.54   MAIN                                                                  02/25/2025 21:09:51 PAGE 2   

  55   2          KeyNum = Key();
  56   2          if(KeyNum == 1) status = 4;
  57   2          if(KeyNum == 2) status = 5;
  58   2          switch(status)
  59   2          {
  60   3            case 0:   //A Green B Red
  61   3            { //Road A
  62   4              Light_Red_A = 1;
  63   4              Light_Green_A = 0;
  64   4              //Road B
  65   4              Light_Yellow_B = 1;
  66   4              Light_Red_B = 0;
  67   4              //CountDown
  68   4              Nixie_CountDown(CountDown);
  69   4              break;
  70   4            }
  71   3            case 1:   // A Yellow
  72   3            { //Road A
  73   4              Light_Green_A = 1;
  74   4              Light_Yellow_A = FlashFlag_Light_Yellow;
  75   4              //Road B:Do nothing
  76   4              //Buzzer
  77   4              // if(FlashFlag_Light_Yellow) Buzzer_Time(100);
  78   4              //CountDown
  79   4              Nixie_CountDown(CountDown);
  80   4              break;
  81   4            }
  82   3            case 2:   //B Green A Red
  83   3            { //Road A
  84   4              Light_Yellow_A = 1;
  85   4              Light_Red_A = 0;
  86   4              //Road B
  87   4              Light_Red_B = 1;
  88   4              Light_Green_B = 0;
  89   4              //CountDown
  90   4              Nixie_CountDown(CountDown);
  91   4              break;
  92   4            }
  93   3            case 3:   // B Yellow
  94   3            { //Road B
  95   4              Light_Green_B = 1;
  96   4              // if(FlashFlag_Light_Yellow == 0) Light_Yellow_B = 0;
  97   4              // if(FlashFlag_Light_Yellow == 1) Light_Yellow_B = 1;
  98   4              Light_Yellow_B = FlashFlag_Light_Yellow;
  99   4              //Road A:Do nothing
 100   4              //Buzzer
 101   4              // if(FlashFlag_Light_Yellow) Buzzer_Time(100);
 102   4              //CountDown
 103   4              Nixie_CountDown(CountDown);
 104   4              break;
 105   4            }
 106   3            case 4:   //Emergency
 107   3            { //Road A
 108   4              Light_Green_A = 1;
 109   4              Light_Yellow_A = 1;
 110   4              Light_Red_A = 0;
 111   4              //Road B
 112   4              Light_Green_B = 1;
 113   4              Light_Yellow_B = 1;
 114   4              Light_Red_B = 0;
 115   4              //Nixie Clear
 116   4              Nixie_SetBuf(7,10);
C51 COMPILER V9.54   MAIN                                                                  02/25/2025 21:09:51 PAGE 3   

 117   4              Nixie_SetBuf(8,10);
 118   4              break;
 119   4            }
 120   3            case 5:   //Night Mode
 121   3            { //Road A
 122   4              Light_Green_A = 1;
 123   4              Light_Red_A = 1;
 124   4              Light_Yellow_A = FlashFlag_Light_Yellow;
 125   4              //Road B
 126   4              Light_Green_B = 1;
 127   4              Light_Red_B = 1;
 128   4              Light_Yellow_B = FlashFlag_Light_Yellow;
 129   4              //Nixie Clear
 130   4              Nixie_SetBuf(7,10);
 131   4              Nixie_SetBuf(8,10);
 132   4              break;
 133   4            }
 134   3          }
 135   2        }
 136   1      }
 137          
 138          
 139          void Timer0_Routine() interrupt 1
 140          {
 141   1        static unsigned int KeyCount, LightCount, FlashCount, T0Count, GRCount;
 142   1        static bit NightMode = 0;
 143   1        TL0 = 0x66; 
 144   1        TH0 = 0xFC;
 145   1        KeyCount++;
 146   1        LightCount++;
 147   1        FlashCount++;
 148   1        T0Count++;
 149   1        GRCount++;
 150   1        //Nixie Loop
 151   1        if(T0Count >= 2){T0Count = 0;Nixie_Loop();}
 152   1        //Night Mode
 153   1        if(GRCount >= 100){
 154   2          GRCount = 0;
 155   2          ADValue = XPT2046_ReadAD(XPT2046_VBAT);
 156   2          if(ADValue < 50) {NightMode = 1;}
 157   2          else {NightMode = 0;}
 158   2      
 159   2          if(NightMode && status != 5) {
 160   3                  status = 5;
 161   3                  LightCount = 0;  // 重置LightCount
 162   3              } else if(!NightMode && status == 5) {
 163   3                  status = 0;
 164   3                  LightCount = 0;  // 重置LightCount
 165   3              }
 166   2        }
 167   1        //Key Detect
 168   1        if(KeyCount >= 20){KeyCount = 0;Key_Loop();}
 169   1        //Flash Flag
 170   1        if (FlashCount >= 500){FlashCount = 0;FlashFlag_Light_Yellow = ~FlashFlag_Light_Yellow;}
 171   1        // if ((status == 1 || status == 3 || status == 5) && LightCount % 500 == 1) {FlashFlag_Buzzer = ~FlashFl
             -ag_Buzzer;}
 172   1        // //Buzzer Control
 173   1        // if(FlashCount >= 500 && (status == 1 || status == 3)) {FlashCount = 0;FlashFlag_Buzzer = ~FlashFlag_Bu
             -zzer;}
 174   1        //Light Control
 175   1        if(!NightMode){ 
 176   2          if(status == 0 && LightCount >= 5000){LightCount = 0;status = 1;}
C51 COMPILER V9.54   MAIN                                                                  02/25/2025 21:09:51 PAGE 4   

 177   2          if(status == 1 && LightCount >= 2000){LightCount = 0;status = 2;}
 178   2          if(status == 2 && LightCount >= 5000){LightCount = 0;status = 3;}
 179   2          if(status == 3 && LightCount >= 2000){LightCount = 0;status = 0;}
 180   2        }
 181   1        //Emergency
 182   1        if(status == 4 && LightCount >= 10000){LightCount = 0;status = 0;}
 183   1        //LED Num
 184   1        if(LightCount%1000 == 1) {
 185   2          if(status == 0 || status == 2) CountDown = 5-(LightCount/1000);
 186   2          if(status == 1 || status == 3) CountDown = 2-(LightCount/1000);
 187   2        }
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    626    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
